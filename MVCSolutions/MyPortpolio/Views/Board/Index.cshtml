@model IPagedList<MyPortpolio.Models.Board>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn-primary">글쓰기</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Writer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().RegDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ReadCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Writer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReadCount)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<div class="pull-center">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
    new { page}),
    new PagedListRenderOptionsBase { LiElementClasses = new string[] { "page-item"},
        PageClasses = new string[] { "page-link"},
        Display = PagedListDisplayMode.IfNeeded
    })
</div>
